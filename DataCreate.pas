unit DataCreate;

interface

procedure createData();

implementation

uses DataBase;

const
  maxSBJ = 49;
  maxTeacher = 29;

  FirstName: array[0..99] of string = (
    'Александр', 'Дмитрий', 'Иван', 'Михаил', 'Сергей', 'Андрей', 'Алексей', 'Владимир', 'Николай', 'Павел',
    'Артем', 'Виктор', 'Евгений', 'Константин', 'Игорь', 'Вячеслав', 'Юрий', 'Василий', 'Роман', 'Олег',
    'Валентин', 'Григорий', 'Денис', 'Максим', 'Антон', 'Виталий', 'Илья', 'Кирилл', 'Леонид', 'Федор',
    'Аркадий', 'Борис', 'Геннадий', 'Даниил', 'Егор', 'Захар', 'Иннокентий', 'Лев', 'Марк', 'Никита',
    'Петр', 'Руслан', 'Семен', 'Тимофей', 'Филипп', 'Эдуард', 'Ярослав', 'Анатолий', 'Вадим', 'Глеб',
    'Давид', 'Игнат', 'Макар', 'Роберт', 'Святослав', 'Степан', 'Тихон', 'Яков', 'Арсений', 'Богдан',
    'Валерий', 'Герман', 'Ефим', 'Леонтий', 'Матвей', 'Назар', 'Родион', 'Савелий', 'Трофим', 'Эльдар',
    'Альберт', 'Вениамин', 'Гавриил', 'Демид', 'Елисей', 'Ждан', 'Кузьма', 'Лазарь', 'Мирон', 'Прохор',
    'Рустам', 'Савва', 'Тимур', 'Фаддей', 'Харитон', 'Чеслав', 'Эмиль', 'Юлиан', 'Аким', 'Влас',
    'Гордей', 'Данила', 'Емельян', 'Климент', 'Лука', 'Нестор', 'Платон', 'Фома', 'Ян', 'Яромир'
  );

  SecondName: array[0..99] of string = (
    'Иванов', 'Петров', 'Сидоров', 'Смирнов', 'Кузнецов', 'Попов', 'Васильев', 'Морозов', 'Новиков', 'Федоров',
    'Соколов', 'Егоров', 'Лебедев', 'Козлов', 'Никитин', 'Романов', 'Воробьев', 'Беляев', 'Григорьев', 'Орлов',
    'Ковалев', 'Зайцев', 'Карпов', 'Михайлов', 'Данилов', 'Крылов', 'Максимов', 'Богданов', 'Жуков', 'Фролов',
    'Дьяков', 'Калинин', 'Лазарев', 'Медведев', 'Ершов', 'Гусев', 'Демин', 'Кондратьев', 'Кудрявцев', 'Борисов',
    'Степанов', 'Яковлев', 'Суворов', 'Котов', 'Гаврилов', 'Носов', 'Леонов', 'Соболев', 'Ермаков', 'Шаров',
    'Марков', 'Киселев', 'Ильин', 'Герасимов', 'Архипов', 'Громов', 'Фомин', 'Давыдов', 'Мельников', 'Щербаков',
    'Блинов', 'Колесников', 'Захаров', 'Крюков', 'Савельев', 'Титов', 'Трофимов', 'Ушаков', 'Логинов', 'Елисеев',
    'Князев', 'Беспалов', 'Виноградов', 'Панфилов', 'Галкин', 'Антонов', 'Лапин', 'Селезнев', 'Ларионов', 'Фадеев',
    'Чистяков', 'Некрасов', 'Харитонов', 'Бондарев', 'Ситников', 'Комаров', 'Пономарев', 'Гришин', 'Дорофеев', 'Карасев',
    'Демьянов', 'Кулаков', 'Софронов', 'Миронов', 'Ширяев', 'Агафонов', 'Руднев', 'Гончаров', 'Терехов', 'Осипов'
  );

  ThirdName: array[0..99] of string = (
    'Александрович', 'Дмитриевич', 'Иванович', 'Михайлович', 'Сергеевич', 'Андреевич', 'Алексеевич', 'Владимирович', 'Николаевич', 'Павлович',
    'Артемович', 'Викторович', 'Евгеньевич', 'Константинович', 'Игоревич', 'Вячеславович', 'Юрьевич', 'Васильевич', 'Романович', 'Олегович',
    'Валентинович', 'Григорьевич', 'Денисович', 'Максимович', 'Антонович', 'Витальевич', 'Ильич', 'Кириллович', 'Леонидович', 'Федорович',
    'Аркадьевич', 'Борисович', 'Геннадьевич', 'Данилович', 'Егорович', 'Захарович', 'Иннокентьевич', 'Львович', 'Маркович', 'Никитич',
    'Петрович', 'Русланович', 'Семенович', 'Тимофеевич', 'Филиппович', 'Эдуардович', 'Ярославович', 'Анатольевич', 'Вадимович', 'Глебович',
    'Давидович', 'Игнатьевич', 'Макарович', 'Робертович', 'Святославович', 'Степанович', 'Тихонович', 'Яковлевич', 'Арсеньевич', 'Богданович',
    'Валерьевич', 'Германович', 'Ефимович', 'Леонтьевич', 'Матвеевич', 'Назарович', 'Родионович', 'Савельевич', 'Трофимович', 'Эльдарович',
    'Альбертович', 'Вениаминович', 'Гавриилович', 'Демидович', 'Елисеевич', 'Жданович', 'Кузьмич', 'Лазаревич', 'Миронович', 'Прохорович',
    'Рустамович', 'Саввич', 'Тимурович', 'Фаддеевич', 'Харитонович', 'Чеславович', 'Эмильевич', 'Юлианович', 'Акимович', 'Власович',
    'Гордеевич', 'Даниилович', 'Емельянович', 'Климентьевич', 'Лукич', 'Несторович', 'Платонович', 'Фомич', 'Янович', 'Яромирович'
  );

Procedure createFileFaculty();
const
   nameFac: array[0..9] of string = (
   'факультет довузовской подготовки и профессиональной ориентации',
   'факультет компьютерной проектировки',
   'факультет информационных технологий и управления',
   'военный факультет',
   'факультет радиотехники и электроники',
   'факультет компьютерных систем и сетей',
   'факультет инфокоммуникаций',
   'инженерно-экономический факультет',
   'институт информационных технологий',
   'факультет инновационного образования'
   );
   nameDecan: array[0..9] of string = (
   'Иванов Сергей Петрович', 'Петрова Анна Николаевна',
   'Сидоров Алексей Иванович', 'Кузнецова Мария Александровна',
   'Морозов Дмитрий Сергеевич', 'Васильева Ольга Викторовна',
   'Николаев Павел Андреевич', 'Смирнова Екатерина Юрьевна',
   'Козлов Игорь Михайлович', 'Лебедева Татьяна Олеговна'
   );
var
   myFile: File of TFaculty;
   temp: TFaculty;
begin
  AssignFile(myFile, 'Data\Faculty');
  reWrite(myFile);
  for var i:= Low(nameFac) to High(nameFac) do begin
    temp.id:= i;
    temp.name:= NameFac[i];
    temp.FirstName:= FirstName[Random(100)];
    temp.SecondName:= SecondName[Random(100)];
    temp.ThirdName:= ThirdName[Random(100)];
    Seek(myFile, i);
    Write(myFile, temp);
  end;
  CloseFile(myFile);
end;

Procedure createFileSBJ();
const
   nameSbj: array[0..maxSBJ] of string = (
   'математика', 'физика', 'химия', 'биология', 'информатика',
   'программирование', 'история', 'философия', 'экономика', 'социология',
    'психология', 'литература', 'русский язык', 'английский язык', 'немецкий язык',
    'французский язык', 'политология', 'право', 'география', 'статистика',
    'линейная алгебра', 'дифференциальные уравнения', 'теория вероятностей',
    'алгоритмы', 'базы данных', 'компьютерные сети', 'искусственный интеллект',
    'машинное обучение', 'физическая химия', 'органическая химия', 'генетика',
    'экология', 'анатомия', 'микробиология', 'культурология', 'этика', 'логика',
    'маркетинг', 'менеджмент', 'финансы', 'бухгалтерский учет', 'микроэкономика',
    'макроэкономика', 'международные отношения', 'конституционное право',
    'гражданское право', 'уголовное право', 'история искусства', 'архитектура', 'дизайн'
   );
var
   myFile: File of TLearntSubject;
   temp: TLearntSubject;
begin
  AssignFile(myFile, 'Data\Subject');
  reWrite(myFile);
  for var i:= Low(nameSbj) to High(nameSbj) do begin
    temp.id:= i;
    temp.name:= nameSbj[i];
    Seek(myFile, i);
    Write(myFile, temp);
  end;
  CloseFile(myFile);
end;

Procedure createFileTeacher();
const

   work: array[0..maxTeacher] of string = (
   'профессор кафедры математики','доцент кафедры физики','профессор кафедры химии',
   'доцент кафедры биологии','профессор кафедры информатики','доцент кафедры программирования',
   'профессор кафедры истории','доцент кафедры философии','профессор кафедры экономики',
   'доцент кафедры социологии','профессор кафедры психологии','доцент кафедры литературы',
   'профессор кафедры русского языка','доцент кафедры английского языка','профессор кафедры политологии',
   'доцент кафедры права','профессор кафедры географии','доцент кафедры статистики',
   'профессор кафедры линейной алгебры','доцент кафедры алгоритмов','профессор кафедры баз данных',
   'доцент кафедры компьютерных сетей','профессор кафедры искусственного интеллекта',
   'доцент кафедры машинного обучения','профессор кафедры физической химии',
   'доцент кафедры органической химии','профессор кафедры генетики','доцент кафедры экологии',
   'профессор кафедры анатомии','доцент кафедры микробиологии'
   );
var
   myFile: File of TTeacher;
   temp: TTeacher;
begin
  AssignFile(myFile, 'Data\Teacher');
  reWrite(myFile);
  for var i:= 0 to maxTeacher do begin
    temp.id:= i;
    temp.workStatus:= work[i];
    temp.FirstName:= FirstName[Random(100)];
    temp.SecondName:= SecondName[Random(100)];
    temp.ThirdName:= ThirdName[Random(100)];
    Seek(myFile, i);
    Write(myFile, temp);
  end;
  CloseFile(myFile);
end;

Procedure createFileTLearntForm();
const
   name: array[0..8] of string = ('дневная', 'обучение студентов-граждан иностранных государств',
   'вечерняя', 'заочка', 'дистанционная', 'интегрированная вечерняя', 'интегрированная заочка',
   'интегрированная дистанционная', 'интегрированная дневная'
   );
   id: array[0..8] of integer = (0,1,3,4,5,6,7,8,9);
var
   myFile: File of TLearntForm;
   temp: TLearntForm;
begin
  AssignFile(myFile, 'Data\LearntForm');
  reWrite(myFile);
  for var i:= Low(name) to High(name) do begin
    temp.id:= id[i];
    temp.name:= name[i];
    Seek(myFile, i);
    Write(myFile, temp);
  end;
  CloseFile(myFile);
end;

Procedure createFileSpecialtyForm();
const
   name: array[0..82] of string = ('Информационные системы и технологии',
   'Проектирование и производство программно-управляемых электронных средств',
   'Микро- и нано-технологии и системы', 'Радиотехника', 'Вычислительные машины, системы и сети',
   'Автоматизированные системы обработки информации', 'Электронные вычислительные средства',
   'Инфокоммуникационные технологии', 'Инженерно-психологическое обеспечение информационных технологий',
   'Программное обеспечение информационных технологий', 'Программно-управляемые электронно-оптические системы',
   'Радиоэлектронные системы', 'Радиоэлектронная защита информации', 'Защита информации в телекоммуникациях',
   'Радиотехника', 'Искусственный интеллект', 'Медицинская электроника', 'Промышленная электроника',
   'Инфокоммуникационные системы', 'Информационные системы и технологии',
   'Информационные технологии и управление в технических системах',
   'Моделирование и компьютерное проектирование радиоэлектронных средств',
   'Квантовые информационные системы', 'Радиоинформатика', 'Инфокоммуникационные технологии',
   'Инфокоммуникационные технологии', 'Инфокоммуникационные технологии',
   'Нанотехнологии и наноматериалы в электронике', 'Электронные системы безопасности',
   'Инфокоммуникационные технологии', 'Информатика и технологии программирования',
   'Информационные системы и технологии', 'Инфокоммуникационные технологии',
   'Программируемые мобильные системы', 'Экономика электронного бизнеса', 'Электронный маркетинг',
   'Электронные и информационно-управляющие системы физических установок', 'Радиотехника',
   'Информационные системы и технологии', 'Информационные системы и технологии', 'Профессиональное обучение',
   'Профессиональное обучение', 'Профессиональное обучение',
   'Психология труда, инженерная психология, эргономика', 'Экономика и управление народным хозяйством',
   'Математические и инструментальные методы экономики', 'Экономика и организация производства',
   'Радиофизика', 'Прикладная математика и информатика', 'Теоретические основы информатики', 'Геоэкология',
   'Инженерная геометрия и компьютерная графика',
   'Приборостроение, метрология и информационно-измерительные приборы и системы',
   'Оптические и оптико-электронные приборы и комплексы',
   'Приборы, системы и изделия медицинского назначения', 'Технология приборостроения',
   'Приборы и методы преобразования изображений и звука', 'Антенны, СВЧ устройства и их технологии',
   'Радиотехника, в том числе системы и устройства радионавигации, радиолокации и телевидения',
   'Элементы и устройства вычислительной техники и систем управления',
   'Системный анализ, управление и обработка информации', 'Вычислительные машины и системы',
   'Математическое моделирование, численные методы и комплексы программ',
   'Математическое и программное обеспечение вычислительных машин, комплексов и компьютерных сетей',
   'Твердотельная электроника, радиоэлектронные компоненты, микро- и наноэлектроника, приборы на квантовых эффектах',
   'Технология и оборудование для производства полупроводников, материалов и приборов электронной техники',
   'Нанотехнологии и наноматериалы', 'Системы, сети и устройства телекоммуникаций',
   'Телекоммуникационные системы и компьютерные сети',
   'Автоматизация и управление технологическими процессами и производствами',
   'Охрана труда', 'Предупреждение и ликвидация чрезвычайных ситуаций',
   'Методы и системы защиты информации, информационная безопасность',
   'Аппаратное и программно-техническое обеспечение информационной безопасности',
   'Компьютерные технологии проектирования электронных систем', 'Информационные радиотехнологии',
   'Информатика и технологии разработки программного обеспечения',
   'Технологии виртуализации и облачных вычислений', 'Искусственный интеллект',
   'Обработка больших объемов информации', 'Информационно-коммуникационные технологии в экономике',
   'Инфокоммуникационные системы и сети', 'Управление безопасностью производственных процессов'
   );
   id: array[0..82] of integer = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
   15, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
   39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
   61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
   81, 82, 83, 84, 85, 86, 87, 88, 89
   );
   facultiId: array[0..82] of integer = (1, 1, 4, 4, 5, 2, 5, 6, 1, 5, 1, 4, 4, 6,
   4, 2, 1, 2, 6, 7, 2, 1, 4, 4, 6, 6, 6, 4, 1, 6, 5, 7, 3, 1, 7, 7, 4, 3, 1, 2, 4,
   4, 4, 1, 7, 7, 7, 4, 5, 2, 1, 1, 6, 1, 1, 1, 4, 4, 4, 5, 2, 5, 5, 5, 4, 1, 4, 6,
   6, 2, 1, 1, 6, 4, 1, 4, 5, 5, 2, 5, 7, 6, 1
   );
var
   myFile: File of TSpecialty;
   temp: TSpecialty;
begin
  AssignFile(myFile, 'Data\Specialty');
  reWrite(myFile);
  for var i:= Low(name) to High(name) do begin
    temp.id:= id[i];
    temp.facultyId:= facultiId[i];
    temp.name:= name[i];
    Seek(myFile, i);
    Write(myFile, temp);
  end;
  CloseFile(myFile);
end;

const
  idGroup: array[0..6] of integer = (451001, 451002, 351001, 251001, 463131, 410971, 465941);
  hours: array[0..8] of integer = (30, 68, 72, 102, 108, 100, 112, 120, 210);

Procedure createFileTGroup();
var
   myFile: File of TGroup;
   tempG: TGroup;
   tempST: TSbjTeacher;
begin
  AssignFile(myFile, 'Data\Group');
  reWrite(myFile);
  for var i:= 0 to 6 do begin
    tempG.id:= idGroup[i];
    tempG.numStudent:= 11;
    tempG.numSBJ:= Random(5)+10;
    for var k:= 0 to tempG.numSBJ-1 do begin
      tempSt.id:= k+1;
      tempSt.sbj:= Random(maxSBJ);
      tempSt.teacher:= Random(maxTeacher);
      //tempSt.typeSbj:= Random(3);
      tempSt.hour:= hours[Random(9)];
      tempSt.credits:= Random(5)+1;

      tempG.arrSBJ[k]:= tempST;
    end;
    Seek(myFile, i);
    Write(myFile, tempG);
  end;
  CloseFile(myFile);
end;

Procedure createFileTStudent();

var
   myFile: File of TStudent;
   temp: TStudent;
   nameNow: integer;
begin
  AssignFile(myFile, 'Data\Student');
  reWrite(myFile);
  nameNow:= 0;
  for var i:= 0 to 6 do begin
    temp.year:= (idGroup[i] div 100000) + 2020;
    temp.group:= idGroup[i];
    for var j:= 0 to 10 do begin
      temp.id:= (temp.group div 10) * 1000 + (j + 1);
      temp.FirstName:= FirstName[Random(100)];
      temp.SecondName:= SecondName[Random(100)];
      temp.ThirdName:= ThirdName[Random(100)];
      inc(nameNow);
      Seek(myFile, (i*11)+j);
      Write(myFile, temp);
    end;
  end;
  CloseFile(myFile);
end;

procedure createData();
begin
  createFileFaculty();
  createFileSBJ();
  createFileTeacher();
  createFileTLearntForm();
  createFileSpecialtyForm();
  createFileTGroup();
  createFileTStudent();
end;

end.
